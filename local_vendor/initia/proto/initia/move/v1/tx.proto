// This is copied from the initia repo. Everything unrelated to MsgExecute is deleted.

syntax = "proto3";
package initia.move.v1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package                      = "github.com/initia-labs/initia/x/move/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the move Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Execute runs a entry function with the given message
  rpc Execute(MsgExecute) returns (MsgExecuteResponse);
}

// MsgExecute is the message to execute the given module function
message MsgExecute {
  option (cosmos.msg.v1.signer) = "sender";

  // Sender is the that actor that signed the messages
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // ModuleAddr is the address of the module deployer
  string module_address = 2;
  // ModuleName is the name of module to execute
  string module_name = 3;
  // FunctionName is the name of a function to execute
  string function_name = 4;
  // TypeArgs is the type arguments of a function to execute
  // ex) "0x1::BasicCoin::Initia", "bool", "u8", "u64"
  repeated string type_args = 5;
  // Args is the arguments of a function to execute
  // - number: little endian
  // - string: base64 bytes
  repeated bytes args = 6;
}

// MsgExecuteResponse returns execution result data.
message MsgExecuteResponse {}
